@inject IJSRuntime JSRuntime
@inject HttpClient Http

<canvas id="waveform-@Id" width="1600" height="194" class="song-height waveform position-absolute"></canvas>

@code {
    [Parameter] public string? WaveformUrl { get; set; }
    [Parameter] public Guid Id { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await DrawWaveform();
        }
    }
    
    IJSObjectReference? _canvas;
    private async Task DrawWaveform()
    {
        // Get the canvas element
        _canvas = await JSRuntime.InvokeAsync<IJSObjectReference>("document.getElementById", $"waveform-{Id}");
        
        // Fetch the waveform JSON
        var waveformJson = await Http.GetFromJsonAsync<object>(WaveformUrl);
        
        // Draw the waveform
        await JSRuntime.InvokeVoidAsync("drawWaveform", waveformJson, _canvas);
     
        // Add canvas fade-in class
        await _canvas.InvokeVoidAsync("classList.add", "fade-in");
        
        // Dispose the canvas reference
        await _canvas.DisposeAsync();
    }
}

